<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.example</groupId>
  <artifactId>GoogleAdsTest</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <scm>
    <connection>scm:svn:http://127.0.0.1/dummy</connection>
    <developerConnection>scm:svn:https://127.0.0.1/dummy</developerConnection>
    <url>http://127.0.0.1/dummy</url>
  </scm>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <archive>
                <manifest>
                  <mainClass>${jar.entrypoint}</mainClass>
                </manifest>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer />
                <transformer>
                  <mainClass>${jar.entrypoint}</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
                <exclude>META-INF/*.RSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>${buildnumber-maven-plugin.version}</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <format>{0,date,yyyyMMdd-HHmm}.{1}</format>
          <items>
            <item>timestamp</item>
            <item>scmVersion</item>
          </items>
          <shortRevisionLength>7</shortRevisionLength>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.20.1</version>
        <configuration>
          <images>
            <image>
              <name>${docker.registry}/${docker.image.path}/${docker.image.name}-external-dependencies</name>
              <build>
                <from>${docker.from}</from>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <targetDir>/opt/billy/lib</targetDir>
                  <inline>
                    <dependencySets>
                      <dependencySet>
                        <excludes>
                          <exclude>billy:*</exclude>
                        </excludes>
                      </dependencySet>
                    </dependencySets>
                  </inline>
                </assembly>
              </build>
            </image>
            <image>
              <name>${docker.registry}/${docker.image.path}/${docker.image.name}-billy-dependencies</name>
              <build>
                <from>${docker.registry}/${docker.image.path}/${docker.image.name}-external-dependencies:${project.version}</from>
                <tags>
                  <tag>${project.version}</tag>
                </tags>
                <assembly>
                  <targetDir>/opt/billy/lib</targetDir>
                  <inline>
                    <dependencySets>
                      <dependencySet>
                        <includes>
                          <include>billy:*</include>
                        </includes>
                        <excludes>
                          <exclude>billy:${project.artifactId}</exclude>
                        </excludes>
                      </dependencySet>
                    </dependencySets>
                    <fileSets>
                      <fileSet>
                        <directory>.</directory>
                        <includes>
                          <include>healthcheck.sh</include>
                        </includes>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
              </build>
            </image>
            <image>
              <name>${docker.registry}/${docker.image.path}/${docker.image.name}</name>
              <build>
                <from>${docker.registry}/${docker.image.path}/${docker.image.name}-billy-dependencies:${project.version}</from>
                <tags>
                  <tag>latest</tag>
                  <tag>${project.version}</tag>
                </tags>
                <env>
                  <NEW_RELIC_APP_NAME>undefined</NEW_RELIC_APP_NAME>
                  <JAVA_XMS>1G</JAVA_XMS>
                  <JAVA_XMX>4G</JAVA_XMX>
                  <JAVA_GC>-XX:NewRatio=3 -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseCMSInitiatingOccupancyOnly -XX:CMSInitiatingOccupancyFraction=65 -XX:+ScavengeBeforeFullGC -XX:+CMSScavengeBeforeRemark</JAVA_GC>
                  <SERVICE_PORT>${jar.port}</SERVICE_PORT>
                </env>
                <ports>
                  <port>${jar.port}</port>
                </ports>
                <entryPoint>java -Xms$JAVA_XMS -Xmx$JAVA_XMX $JAVA_GC -Dfile.encoding=UTF8 $(if [ "${NEW_RELIC_APP_NAME}" != "undefined" ]; then echo "-Dnewrelic.config.file=/opt/newrelic/newrelic.yml -javaagent:/opt/newrelic/newrelic.jar"; fi) -jar /opt/billy/${project.build.finalName}.jar</entryPoint>
                <assembly>
                  <targetDir>/opt/billy</targetDir>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <healthCheck>
                  <interval>5s</interval>
                  <timeout>60s</timeout>
                  <retries>1</retries>
                  <cmd>/opt/billy/lib/healthcheck.sh</cmd>
                </healthCheck>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.27.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>byte-buddy</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>byte-buddy-agent</artifactId>
          <groupId>net.bytebuddy</groupId>
        </exclusion>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <properties>
    <tracker.commons-injection.version>1.2.12.00</tracker.commons-injection.version>
    <billy.logger.version>1.2.10.00</billy.logger.version>
    <buildnumber-maven-plugin.version>1.3</buildnumber-maven-plugin.version>
    <billy.core.config-manager.version>1.1.36.00</billy.core.config-manager.version>
    <maven-compiler-plugin.version>3.0</maven-compiler-plugin.version>
    <billy.http-server-json.version>1.2.12.00</billy.http-server-json.version>
    <jar.entrypoint>googleadstest.ui.GoogleAdsTest</jar.entrypoint>
    <billy.http-server-core.version>1.2.12.00</billy.http-server-core.version>
    <log4j-core.version>2.2</log4j-core.version>
    <maven.compiler.target>8</maven.compiler.target>
    <jar.port>8888</jar.port>
    <billy.http-client-core.version>1.4.47.00</billy.http-client-core.version>
    <maven.compiler.source>8</maven.compiler.source>
  </properties>
</project>

